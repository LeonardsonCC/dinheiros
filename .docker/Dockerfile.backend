# Stage 1: Build
FROM golang:1.24.3-alpine AS builder
WORKDIR /app

# Copy go.mod and go.sum
COPY go.mod go.sum ./
# Download all dependencies.
# Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o dinheiros ./cmd/dinheiros

# Stage 2: Final image
FROM alpine:latest
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the pre-built binary from the builder stage
COPY --from=builder /app/dinheiros .

# Arguments for environment variables
ARG DB_TYPE
ARG DB_PATH
ARG DB_HOST
ARG DB_PORT
ARG DB_USER
ARG DB_PASS
ARG DB_NAME
ARG PORT
ARG JWT_SECRET
ARG JWT_TOKEN_DURATION

# Set environment variables
ENV DB_TYPE=${DB_TYPE}
ENV DB_PATH=${DB_PATH}
ENV DB_HOST=${DB_HOST}
ENV DB_PORT=${DB_PORT}
ENV DB_USER=${DB_USER}
ENV DB_PASS=${DB_PASS}
ENV DB_NAME=${DB_NAME}
ENV PORT=${PORT}
ENV JWT_SECRET=${JWT_SECRET}
ENV JWT_TOKEN_DURATION=${JWT_TOKEN_DURATION}

EXPOSE 8080

# Command to run the executable
CMD ["./dinheiros"] 